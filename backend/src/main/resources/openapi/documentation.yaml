openapi: "3.0.3"
info:
  title: "KotlinConfApp API"
  description: "KotlinConfApp API"
  version: "1.0.0"
servers:
- url: "http://0.0.0.0:8080"
paths:
  /conference:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "503":
          description: "Service Unavailable"
          content:
            '*/*':
              schema:
                type: "object"
  /feedback:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              type: "object"
        required: true
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
  /feedback/summary:
    get:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
  /healthz:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /sessionizeSync:
    post:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /sign:
    post:
      description: ""
      requestBody:
        content:
          text/plain:
            schema:
              type: "string"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "object"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "object"
  /time:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /time/{timestamp}:
    post:
      description: ""
      parameters:
      - name: "timestamp"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /vote:
    get:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              type: "object"
        required: true
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "503":
          description: "Service Unavailable"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /vote/all:
    get:
      description: "Admin endpoints"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
  /vote/summary:
    get:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
components:
  schemas:
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"