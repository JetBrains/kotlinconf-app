[versions]
agp = "8.3.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-test-junit = "1.1.5"
androidx-work-runtime = "2.9.0"
androidx-preference = "1.2.1"
compose = "1.6.3"
exposedCore = "0.47.0"
exposedDao = "0.41.1"
exposedJdbc = "0.47.0"
h2 = "2.2.220"
hikaricp = "5.0.1"
image-loader = "1.7.8"
junit = "4.13.2"
kotlin = "1.9.22"
kotlinx-serialization-json = "1.6.2"
kotlinx-datetime = "0.6.0-RC.2"
ktor = "2.3.8"
android-svg="1.4"
ktor-client-logging = "2.3.8"
ktor-serialization-kotlinx-json = "2.3.8"
ktor-client-content-negotiation = "2.3.8"
ktor-client-cio = "2.3.8"
ktor-utils = "2.3.8"
logbackClassic = "1.4.14"
markdown = "0.13.0"
material3 = "1.6.0"
postgresql = "42.6.0"
precompose = "1.5.10"
compose-plugin = "1.6.0"

[libraries]
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedCore" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedDao" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedJdbc" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "image-loader" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-work-runtime = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "androidx-work-runtime" }
androidx-preference = { group = "androidx.preference", name = "preference-ktx", version.ref = "androidx-preference" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
components-ui-tooling-preview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "compose-plugin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor-client-logging" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-serialization-kotlinx-json" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-client-content-negotiation" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-client-cio" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor-utils" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "material3" }
multiplatform-markdown-renderer-m3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "markdown" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
android-svg = { module = "com.caverock:androidsvg-aar", version.ref = "android-svg" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

